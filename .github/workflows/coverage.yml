name: Coverage Badge

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    name: Update coverage badge
    container:
      image: ghcr.io/zelenin/tdlib-docker:bb474a2-alpine
    env:
      BUDVA43__TELEGRAM__API_ID: ${{ secrets.BUDVA43__TELEGRAM__API_ID }}
      BUDVA43__TELEGRAM__API_HASH: ${{ secrets.BUDVA43__TELEGRAM__API_HASH }}
      BUDVA43__TELEGRAM__PHONE_NUMBER: ${{ secrets.BUDVA43__TELEGRAM__PHONE_NUMBER }}
    steps:
      - name: Install dependencies
        run: |
          apk update
          apk add --no-cache git curl build-base linux-headers openssl-dev zlib-dev libstdc++ bash tar

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache: false # TODO: выключил - почему ругается на кеш?

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git config --global --add safe.directory /__w/budva43/budva43

      - name: Create empty .env file for tests
        run: |
          mkdir -p config/.private
          touch config/.private/.env

      - name: Debug environment variables
        run: |
          echo "Checking environment variables:"
          echo "BUDVA43__TELEGRAM__API_ID: ${BUDVA43__TELEGRAM__API_ID:-'NOT SET'}"
          echo "BUDVA43__TELEGRAM__API_HASH: ${BUDVA43__TELEGRAM__API_HASH:-'NOT SET'}"
          echo "BUDVA43__TELEGRAM__PHONE_NUMBER: ${BUDVA43__TELEGRAM__PHONE_NUMBER:-'NOT SET'}"

      - name: Set CGO environment variables
        run: |
          export CGO_CFLAGS="-I/usr/local/include"
          export CGO_LDFLAGS="-L/usr/local/lib -ltdjson"
          echo "CGO_CFLAGS=-I/usr/local/include" >> $GITHUB_ENV
          echo "CGO_LDFLAGS=-L/usr/local/lib -ltdjson" >> $GITHUB_ENV

      - name: Download dependencies
        run: go mod download

      - name: Run unused-interface-methods
        run: |
          go install github.com/unused-interface-methods/unused-interface-methods@latest
          GOEXPERIMENT=synctest unused-interface-methods $(go list ./... | grep -v "/mocks")

      - name: Run tests and generate coverage
        run: |
          GOEXPERIMENT=synctest go test -covermode=count -coverprofile=.coverage/.out -coverpkg=./... ./test/
          go tool cover -func=.coverage/.out -o=.coverage/.txt
          go tool cover -html=.coverage/.out -o=.coverage/.html

      - name: Go Coverage Badge
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: .coverage/.txt
          text: coverage
          link: https://htmlpreview.github.io/?https://github.com/${{ github.repository }}/blob/main/.coverage/.html

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
        with:
          files: README.md

      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git add README.md .coverage/.out .coverage/.txt .coverage/.html
          git commit -m "chore: Updated coverage files"

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}
