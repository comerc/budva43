version: "2"
run:
  modules-download-mode: readonly
  allow-parallel-runners: true
linters:
  enable:
    - bodyclose # checks that HTTP response body is closed
    - copyloopvar # reports loop variables that are copied
    - gosec # inspects source code for security problems
    - prealloc # reports slice declarations that could be preallocated
    - revive # drop-in replacement of golint
    - unconvert # detects unneeded conversions in if statements
  settings:
    revive:
      severity: error
      rules:
        - name: atomic # commonly mistaken usages of the sync/atomic package
          disabled: false
        - name: bare-return # bare (a.k.a. naked) returns
          disabled: false
        - name: comment-spacings # comment spacing
          disabled: false
        - name: constant-logical-expr # logical expressions that evaluate always to the same value
          disabled: false
        - name: context-as-argument #  should be the first parameter of a function
          disabled: false
        - name: context-keys-type # basic types should not be used as a key in `context.WithValue`
          disabled: false
        # - name: cyclomatic # cyclomatic complexity is a measure of code complexity          
        #   disabled: false
        - name: datarace # potential dataraces caused
          disabled: false
        - name: defer # some common mistakes when using defer statement
          disabled: false
        - name: early-return # to avoid if-then-else constructions
          disabled: false
        - name: error-return # the errors should be last in the list of returned values by a function
          disabled: false
        - name: errorf # use `fmt.Errorf()` instead of `errors.New(fmt.Sprintf())`
          disabled: false
        - name: filename-format # enforces conventions on source file names
          disabled: false
          arguments: ["^[_a-z][_a-z0-9]*\\.go$"]
        - name: get-return # functions with names prefixed with Get are supposed to return a value
          disabled: false
        - name: identical-branches # an if-then-else conditional with identical implementations in both branches is an error
          disabled: false
        - name: if-return # checking if an error is nil to just after return the error or nil is redundant
          disabled: false
        - name: import-alias-naming # enforces clear and lowercase import alias names, aliases with underscores ("_") are always allowed
          disabled: false 
          arguments: ["^[a-z][A-Za-z0-9]{0,}$"]
        - name: increment-decrement # spots expressions like `i += 1` and `i -= 1` and proposes to change them into `i++` and `i--`
          disabled: false
        - name: indent-error-flow # highlights redundant else-blocks that can be eliminated from the code
          disabled: false
        - name: modifies-parameter # a function modifies one or more of its parameters
          disabled: false
        - name: modifies-value-receiver # a method modifies its receiver
          disabled: false
        - name: range # suggests a shorter way of writing ranges that do not use the second value
          disabled: false
        - name: receiver-naming # receiver names in a method should reflect their identity
          disabled: false
        - name: redefines-builtin-id # redefining these built in names can lead to bugs very difficult to detect
          disabled: false
        # - name: redundant-import-alias # alias used on the import statement matches the imported package name
        #   disabled: false
        - name: string-of-int # `string(42)` is not `"42"`
          disabled: false
        - name: time-equal # using `==` and `!=` for equality `check time.Time` is not correct, use `time.Equal()` instead
          disabled: false
        # - name: unchecked-type-assertion # checks whether a type assertion result is checked (the ok value)
        #   disabled: false
        - name: unconditional-recursion # detects and warns about unconditional (direct) recursive calls
          disabled: false
        - name: unexported-return # an exported function or method returns a value of an un-exported type
          disabled: false
        - name: unnecessary-stmt # redundant statements like a break at the end of a case block
          disabled: false
        - name: unreachable-code # unreachable code
          disabled: false
        # - name: unused-parameter # unused parameter in function parameters
        #   disabled: false
        # - name: unused-receiver # unused-receiver
        #   disabled: false
        - name: use-any # proposes to replace instances of `interface{}` with `any`
          disabled: false
        - name: useless-break # a `break` statement is unnecessary in a switch-case statement
          disabled: false
        - name: waitgroup-by-value # a `sync.WaitGroup` expected as a by-value parameter in a function or method
          disabled: false
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    paths:
      - .*_mock.go$
      - mocks
      - testing
      - third_party$
      - builtin$
      - examples$
formatters:
  enable:
    - gci # enable custom order of sections 
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/comerc/budva43)
      custom-order: true
  exclusions:
    generated: lax
    paths:
      - .*_mock.go$
      - mocks
      - testing
      - third_party$
      - builtin$
      - examples$
