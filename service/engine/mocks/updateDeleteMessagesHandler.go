// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	client "github.com/zelenin/go-tdlib/client"

	mock "github.com/stretchr/testify/mock"
)

// UpdateDeleteMessagesHandler is an autogenerated mock type for the updateDeleteMessagesHandler type
type UpdateDeleteMessagesHandler struct {
	mock.Mock
}

type UpdateDeleteMessagesHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *UpdateDeleteMessagesHandler) EXPECT() *UpdateDeleteMessagesHandler_Expecter {
	return &UpdateDeleteMessagesHandler_Expecter{mock: &_m.Mock}
}

// Run provides a mock function with given fields: update
func (_m *UpdateDeleteMessagesHandler) Run(update *client.UpdateDeleteMessages) {
	_m.Called(update)
}

// UpdateDeleteMessagesHandler_Run_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Run'
type UpdateDeleteMessagesHandler_Run_Call struct {
	*mock.Call
}

// Run is a helper method to define mock.On call
//   - update *client.UpdateDeleteMessages
func (_e *UpdateDeleteMessagesHandler_Expecter) Run(update interface{}) *UpdateDeleteMessagesHandler_Run_Call {
	return &UpdateDeleteMessagesHandler_Run_Call{Call: _e.mock.On("Run", update)}
}

func (_c *UpdateDeleteMessagesHandler_Run_Call) Run(run func(update *client.UpdateDeleteMessages)) *UpdateDeleteMessagesHandler_Run_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*client.UpdateDeleteMessages))
	})
	return _c
}

func (_c *UpdateDeleteMessagesHandler_Run_Call) Return() *UpdateDeleteMessagesHandler_Run_Call {
	_c.Call.Return()
	return _c
}

func (_c *UpdateDeleteMessagesHandler_Run_Call) RunAndReturn(run func(*client.UpdateDeleteMessages)) *UpdateDeleteMessagesHandler_Run_Call {
	_c.Run(run)
	return _c
}

// NewUpdateDeleteMessagesHandler creates a new instance of UpdateDeleteMessagesHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUpdateDeleteMessagesHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *UpdateDeleteMessagesHandler {
	mock := &UpdateDeleteMessagesHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
