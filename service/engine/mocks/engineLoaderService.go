// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// EngineLoaderService is an autogenerated mock type for the engineLoaderService type
type EngineLoaderService struct {
	mock.Mock
}

type EngineLoaderService_Expecter struct {
	mock *mock.Mock
}

func (_m *EngineLoaderService) EXPECT() *EngineLoaderService_Expecter {
	return &EngineLoaderService_Expecter{mock: &_m.Mock}
}

// LoadConfig provides a mock function with no fields
func (_m *EngineLoaderService) LoadConfig() {
	_m.Called()
}

// EngineLoaderService_LoadConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LoadConfig'
type EngineLoaderService_LoadConfig_Call struct {
	*mock.Call
}

// LoadConfig is a helper method to define mock.On call
func (_e *EngineLoaderService_Expecter) LoadConfig() *EngineLoaderService_LoadConfig_Call {
	return &EngineLoaderService_LoadConfig_Call{Call: _e.mock.On("LoadConfig")}
}

func (_c *EngineLoaderService_LoadConfig_Call) Run(run func()) *EngineLoaderService_LoadConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *EngineLoaderService_LoadConfig_Call) Return() *EngineLoaderService_LoadConfig_Call {
	_c.Call.Return()
	return _c
}

func (_c *EngineLoaderService_LoadConfig_Call) RunAndReturn(run func()) *EngineLoaderService_LoadConfig_Call {
	_c.Run(run)
	return _c
}

// NewEngineLoaderService creates a new instance of EngineLoaderService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEngineLoaderService(t interface {
	mock.TestingT
	Cleanup(func())
}) *EngineLoaderService {
	mock := &EngineLoaderService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
